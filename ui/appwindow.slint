import "./JetBrainsMono-Regular.ttf";
import "./JetBrainsMono-Regular.ttf";
enum Weapon {
    Rock,
    Paper,
    Scissors,
}

component Hint {
    property <string> text;
    in-out property <bool> appear : false;
    y : appear ? 20px : - hinttext.height - 30px;
    Rectangle {
        border-radius: 10px;
        background : #d65d0e;
        height : hinttext.height + 15px;
        width : hinttext.width + 30px;
        drop-shadow-blur: 50px;
        drop-shadow-color: #1d2021;
        drop-shadow-offset-y: 5px;

        hinttext := Text {
            wrap : word-wrap;
            horizontal-alignment: center;
            text : "! Hold what you choose !";
            color : #282828;
            max-width: 100px;
            min-width: 20px;
            font-family: "JetBrains Mono";
            
        }
    }
    animate y {
        duration : 500ms;
        easing : ease-out-back;
    }
    Timer {
        property <float> value : 0.0;
        interval : 100ms;
        running: appear;
        triggered => {
            value += 0.1;
            if value >= 3.5 {
                value = 0;
                root.y = -hinttext.height - 30px;
                appear = false;
            }
        }
    }
    
}

export component AppWindow inherits Window {
    callback picked(int);
    in property <bool> imgVis: true;
    property <color> testcolor: #282828;
    property <bool> weapon_pressed: ta.pressed || ta2.pressed || ta3.pressed;
    property <float> value: weapon_pressed ? 4 : 4;
    property <float> on_select_opacity: 1;
    property <float> win_count;
    in property <float> next_round_opacity : 1;
    callback match_selected(int);
    callback setup_table();
    in property <bool> start_passive : Rounder.y > 140px;
    width: 600px;
    height: 450px;
    background: #282828;
    title: "Rock Paper";
    one_point_five := Timer {
        interval : 1.5s;
        running: false;
        triggered => {
            setup_table();
            setupWep.running = true;
        }
    }
    one_sec := Timer {
        interval : 1000ms;
        running: false;
        triggered => {
            NextScreen.visible = false;
            WeaponScreen.visible = true;
            WeaponScreen.opacity = 1;
            self.running = false;
        }
    }
    NextScreen := Rectangle {
        Rounder := Text {
            opacity : next_round_opacity;
            x : 337px;
            y : 150px;//51px;//84px;//117px;//150px;
            horizontal-alignment: center;
            font-size: 25px;
            font-family: "JetBrains Mono NL";
            color : #d65d0e;
            text : "_\na\n2\n5\n9";
            rounds := TouchArea {
                clicked() => {
                    if self.pressed-y > 0 && self.pressed-y < 33px {
                        Rounder.y = 150px;
                    } else if self.pressed-y > 33px && self.pressed-y < 66px {
                        Rounder.y = 117px;
                    } else if self.pressed-y > 66px && self.pressed-y < 99px {
                        Rounder.y = 84px;
                    } else if self.pressed-y > 99px && self.pressed-y < 132px  {
                        Rounder.y = 51px;
                    } else if self.pressed-y > 132px && self.pressed-y < self.height {
                        Rounder.y = 17px;
                    }
                }
            }
            animate y, opacity {
                duration: 250ms;
                easing: ease-out-back;
            }
        }
        Rectangle {
            opacity : 0.5;
            height : 150px;
            y : 0px;
            background: #282828;
        }
        Rectangle {
            opacity : 0.5;
            y  : 183px;
            background: #282828;

        }
        Text {
            opacity : next_round_opacity;
            y : 150px;
            text : "Next round for   win(s) ?";
            font-size: 25px;
            font-family: "JetBrains Mono NL";
            color : #ebdbb2;
            animate opacity {
                duration: 250ms;
                easing: ease-out-back;
            }
        }
        
        
        startBtn := Rectangle {
            y : start_passive ? 350px : Start.pressed ? 300px : Start.has-hover ? 295px : 300px;
            opacity : start_passive ? 0 : 1;
            background: start_passive ? #d65d0e00 : #d65d0e;
            drop-shadow-blur: start_passive ? 15px : 100px;
            drop-shadow-color: #1d2021;
            width : start_passive ? 100px : Start.pressed ? 140px : Start.has-hover ? 150px : 140px;
            border-radius: 15px;
            height : start_passive ? 30px : Start.pressed ? 65px : Start.has-hover ? 75px : 65px ;
            Image {
                x : 20px;
                source : @image-url("./play.png");
                width : 25px;
            }
            Text {
                x : Start.pressed ? 60px : Start.has-hover ? 70px : 60px;
                text : "Start";
                font-size: 20px;
                color : #282828;
                font-family: "JetBrains Mono";
                animate x {
                    duration : 250ms;
                    easing: ease-out-back;
                }
            }
            animate y, drop-shadow-blur, drop-shadow-color, height, width, opacity, background {
                duration : 250ms;
                easing: ease-out-back;
    
            }
            Start := TouchArea {
                clicked () => {
                    starter.running = true;
                    one_sec.running = true;
                    one_point_five.running = true;
                    setupWep.running = true;
                }
            }
        }

        peep := Text {
            visible : false;
            text : Rounder.y /1px;
            font-size : 30px;
            color: white;
        }
    }
    starter := Timer {
        interval : 500ms;
        running: false;
        triggered => {
            if Rounder.y == 150px {
            } else if Rounder.y == 117px {
                match_selected(1);
            } else if Rounder.y == 84px {
                match_selected(2);
            } else if Rounder.y == 51px {
                match_selected(5);
            } else if Rounder.y == 17px {
                match_selected(9);
            }
            self.running = false;
            
        }
    }
    timer := Timer {
        interval: 250ms;
        running: weapon_pressed;
        triggered => {
            value = self.running ? value - 0.25 : 3;
            if value == 4 {
                counter.y = 50px;
            } else if value == 3.25 {
                if ta3.pressed {
                    rockImg.rotation-angle = -10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = -10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = -10deg;
                }
            } else if value == 3.00 {
                counter.y = 20px;
                if ta3.pressed {
                    rockImg.rotation-angle = 10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 10deg;
                }
            } else if value == 2.75 {
                if ta3.pressed {
                    rockImg.rotation-angle = 0deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 0deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 0deg;
                }
            } else if value == 2.25 {
                if ta3.pressed {
                    rockImg.rotation-angle = -10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = -10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = -10deg;
                }
            } else if value == 2.00 {
                if ta3.pressed {
                    rockImg.rotation-angle = 10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 10deg;
                }
                counter.y = -35px;
            } else if value == 1.75 {
                if ta3.pressed {
                    rockImg.rotation-angle = 0deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 0deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 0deg;
                }
            } else if value == 1.25 {
                if ta3.pressed {
                    rockImg.rotation-angle = -10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = -10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = -10deg;
                }
            } else if value == 1.00 {
                if ta3.pressed {
                    rockImg.rotation-angle = 10deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 10deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 10deg;
                }
                counter.y = -85px;
            } else if value == 0.75 {
                if ta3.pressed {
                    rockImg.rotation-angle = 0deg;
                } else if ta.pressed {
                    paperImg.rotation-angle = 0deg;
                } else if ta2.pressed {
                    scissImg.rotation-angle = 0deg;
                }
            } else if value == 0 {
                counter.y = -135px;
                if ta.pressed {
                    picked(1);
                } else if ta2.pressed {
                    picked(2);
                } else if ta3.pressed {
                    picked(3);
                }
            } else if value == -1 {
            }
        }
    }


    property <int> weapon_time : 0;
    setupWep := Timer {
        interval: 250ms;
        running: false;
        triggered => {
            weapon_time += 25;
            if weapon_time == 25 {
                WeaponScreen.opacity = 1;
                btn3.rock_passive = false;
            }
        }
        
    }
    in property <int> weapon_opacity : 0;
    WeaponScreen := Rectangle {
        visible: false;
        opacity : weapon_opacity;
        animate opacity {
            duration : 100ms;
        }
        Text {
            horizontal-alignment: center;
            color: #fe8019;
            text: " . . .\n\n  Rock  \n\n Paper\n\nScissors";
            opacity: 100%;
            font-size: 20px;
            x: (root.width - self.width) / 2;
            y: root.height * 3 / 4 + (ta3.has-hover ? - 42px : ta.has-hover ? - 96px : ta2.has-hover ? - 150px : 10px);
            font-family: "JetBrains Mono";
            animate y {
                duration: 500ms;
                delay: 200ms;
                easing: ease-out-quad;
            }
        }

        counter := Text {
            opacity: weapon_pressed ? 1 : 0;
            horizontal-alignment: center;
            font-size: 40px;
            color: #8ec07c;
            font-family: "JetBrains Mono";
            text: "   \n 3 \n 2 \n 1 \n";
            animate y {
                duration: 500ms;
                easing: ease-in-out-back;
            }
        }

        Rectangle {
            y: 0;
            background: testcolor;
            height: 75px;
        }

        Rectangle {
            visible: true;
            y: 125px;
            background: testcolor;
            height: root.height * 3 / 4 - 115px;
        }

        Rectangle {
        // visible: false;
        background: testcolor;
            y: root.height * 3 / 4 + 40px;
        }

        Rectangle {
            opacity: 30%;
            y: ta.has-hover ? - root.height : root.height;
            background: @linear-gradient(180deg, rgba(214,93,14,0) 0%, rgba(204,36,29,1) 36%, rgba(204,36,29,0.7455182756696428) 54%, rgba(214,93,14,0) 100%);
            height: 2 * root.height;
            animate y {
                duration: 500ms;
                easing: ease-out;
            }
        }

        Image {
            visible: imgVis;
            source: @image-url("./lose_back.png");
        }

        background: #282828;
        btn2 := Rectangle {
            opacity: on_select_opacity;
            background: #d65d0e;
        // visible: false;
        width: ta2.has-hover ? 137.5px : 125px;
            height: ta2.has-hover ? 137.5px : 125px;
            border-radius: 25px;
            drop-shadow-blur: 50px;
            drop-shadow-color: ta2.has-hover ? #fe801910 : #1d2021;
            x: ta2.has-hover ? 399.75px : 389.25px;
            y: ta2.has-hover ? 141.25px : 162.5px;
            drop-shadow-offset-x: ta2.has-hover ? - 7.75px : - 5px;
            drop-shadow-offset-y: ta2.has-hover ? 21.25px : 0px;

            scissImg := Image {
                source: @image-url("./scissors.png");
                height: 70px;

                animate rotation-angle {
                    duration: 250ms;
                    easing: ease-out-bounce;
                }
            }

            ta2 := TouchArea {
                clicked => {
                    value = timer.running ? 3.5 : 3.5;
                    counter.y = timer.running ? 100px : 100px;
                    scissImg.rotation-angle = timer.running ? 0deg : 0deg;
                }
            }

            animate opacity {
                duration: 500ms;
                easing: ease-out-back;
            }
            animate y, drop-shadow-color, height, width, x, drop-shadow-offset-x, drop-shadow-offset-y {
                duration: 750ms;
                easing: ease-out-elastic;
            }
        }

        btn3 := Rectangle {
            property <bool> rock_passive : true;
            property <length> rockx : ta3.has-hover ? 66.75px : rock_passive ? 100px : 87.5px;
            property <length> rocky : ta3.has-hover ? 141.25px : rock_passive ?
            180px : 162.5px;
            opacity: rock_passive ? 0.5 : 1;
            background: #d65d0e;
        // visible: false;
        width: ta3.has-hover ? 137.5px : 125px;
            height: ta3.has-hover ? 137.5px : 125px;
            border-radius: 25px;
            drop-shadow-blur: 50px;
            drop-shadow-color: ta3.has-hover ? #fe801910 : #1d2021;
            x: rockx;
            y: rocky;
            drop-shadow-offset-x: ta3.has-hover ? 7.75px : 5px;
            drop-shadow-offset-y: ta3.has-hover ? 21.25px : 0px;
            rockImg := Image {
                source: @image-url("./rock.png");
                width: 60px;
                animate rotation-angle, opacity {
                    duration: 250ms;
                    easing: ease-in-out-back;
                }
            }

            ta3 := TouchArea {
                clicked => {
                    value = timer.running ? 3.5 : 3.5;
                    counter.y = timer.running ? 100px : 100px;
                    rockImg.rotation-angle = timer.running ? 0deg : 0deg;
                }
            }

            animate opacity {
                duration: 500ms;
                easing: ease-out-back;
            }
            animate y, drop-shadow-color, height, width, x, drop-shadow-offset-x, drop-shadow-offset-y {
                duration: 750ms;
                easing: ease-out-elastic;
            }
        }

        btn := Rectangle {
            opacity: on_select_opacity;
            background: #d65d0e;
            width: ta.has-hover ? 137.5px : 125px;
            height: ta.has-hover ? 137.5px : 125px;
            border-radius: 25px;
            drop-shadow-blur: 50px;
            drop-shadow-color: ta.has-hover ? #fe801910 : #1d2021;
            x: ta.has-hover ? 231.25px : 237.5px;
            y: ta.has-hover ? 141.25px : 162.5px;
            drop-shadow-offset-y: ta.has-hover ? 21.25px : 0px;
        // visible : false;
        
        paperImg := Image {
                x: 3px + (parent.width - self.width) / 2;
                source: @image-url("./paper.png");
                width: 65px;
                animate rotation-angle {
                    duration: 250ms;
                    easing: ease-in-out-back;
                }
            }

            ta := TouchArea {
                clicked => {
                    value = timer.running ? 3.5 : 3.5;
                    counter.y = timer.running ? 100px : 100px;
                    paperImg.rotation-angle = timer.running ? 0deg : 0deg;
                }
            }

            animate opacity {
                duration: 500ms;
                easing: ease-out-back;
            }
            animate y, drop-shadow-color, height, width, x, drop-shadow-offset-x, drop-shadow-offset-y {
                duration: 750ms;
                easing: ease-out-elastic;
            }
        }

        Text {
            color: #ebdbb2;
            text: "Your pick";
            opacity: 100%;
            x: (root.width - self.width) / 2;
            y: root.height * 3 / 4 - 10px;
            font-family: "JetBrains Mono";
            font-size: 15px;
        }

        Text {
            text: value;
            color: white;
            x: 0;
            y: 0;
        }
    }
}
