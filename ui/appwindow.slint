
import "./JetBrainsMono-Regular.ttf";
enum Weapon {
    Rock,
    Paper,
    Scissors,
}
export component AppWindow inherits Window {
    callback picked(int);
    in property <bool> imgVis: true;
    property <color> testcolor: #282828;
    property <bool> weapon_pressed : ta.pressed || ta2.pressed || ta3.pressed;
    property <int> value : weapon_pressed ? 4 : 4;
    title: "Rock Paper";
    timer := Timer {
        interval: 900ms;
        running: weapon_pressed;
        triggered => {
            value = self.running ? value - 1 : 3;
            if value == 4 {
                counter.y = 50px;
            } else if value == 3 {
                counter.y = 20px;
            } else if value == 2 {
                counter.y = -35px;
            } else if value == 1 {
                counter.y = -85px;
            } else if value == 0 {
                counter.y = -135px;
            }
        }
    }

    Main := Rectangle {
        Text {
            horizontal-alignment: center;
            color: #fe8019;
            text: " . . .\n\n  Rock  \n\n Paper\n\nScissors";
            opacity: 100%;
            font-size: 20px;
            x: (root.width - self.width) / 2;
            y: root.height * 3 / 4 + (ta3.has-hover ? - 42px : ta.has-hover ? - 96px : ta2.has-hover ? - 150px : 10px);
            font-family: "JetBrains Mono";
            animate y {
                duration: 500ms;
                delay: 200ms;
                easing: ease-out-quad;
            }
        }

        counter := Text {
            opacity: weapon_pressed ? 1 : 0;
            horizontal-alignment: center;
            font-size: 40px;
            color: #8ec07c;
            font-family: "JetBrains Mono";
            text: "   \n 3 \n 2 \n 1 \n";
            animate y, opacity {
                duration : 500ms;
                easing: ease-in-out-back;
            }
        }

        Rectangle {
            y: 0;
            background: testcolor;
            height: 75px;
        }

        Rectangle {
            visible: true;
            y: 125px;
            background: testcolor;
            height: root.height * 3 / 4 - 115px;
        }

        Rectangle {
        // visible: false;
        background: testcolor;
            y: root.height * 3 / 4 + 40px;
        }

        Rectangle {
            opacity: 30%;
            y: ta.has-hover ? - root.height : root.height;
            background: @linear-gradient(180deg, rgba(214,93,14,0) 0%, rgba(204,36,29,1) 36%, rgba(204,36,29,0.7455182756696428) 54%, rgba(214,93,14,0) 100%);
            height: 2 * root.height;
            animate y {
                duration: 500ms;
                easing: ease-out;
            }
        }

        Image {
            visible: imgVis;
            source: @image-url("./lose_back.png");
        }

        width: 600px;
        height: 450px;
        background: #282828;
        btn2 := Rectangle {
            background: #d65d0e;
        // visible: false;
        width: ta2.has-hover ? 137.5px : 125px;
            height: ta2.has-hover ? 137.5px : 125px;
            border-radius: 25px;
            drop-shadow-blur: 50px;
            drop-shadow-color: ta2.has-hover ? #fe801910 : #1d2021;
            x: ta2.has-hover ? 399.75px : 389.25px;
            y: ta2.has-hover ? 141.25px : 162.5px;
            drop-shadow-offset-x: ta2.has-hover ? - 7.75px : - 5px;
            drop-shadow-offset-y: ta2.has-hover ? 21.25px : 0px;

            Image {
                source: @image-url("./scissors.png");
                height: 70px;
            }

            ta2 := TouchArea {
                clicked => {
                    value = timer.running ? 4 : 4;
                    counter.y = timer.running ? 100px : 100px;
                }
            }

            animate y, drop-shadow-color, height, width, x, drop-shadow-offset-x, drop-shadow-offset-y {
                duration: 750ms;
                easing: ease-out-elastic;
            }
        }

        btn3 := Rectangle {
            background: #d65d0e;
        // visible: false;
        width: ta3.has-hover ? 137.5px : 125px;
            height: ta3.has-hover ? 137.5px : 125px;
            border-radius: 25px;
            drop-shadow-blur: 50px;
            drop-shadow-color: ta3.has-hover ? #fe801910 : #1d2021;
            x: ta3.has-hover ? 66.75px : 87.5px;
            y: ta3.has-hover ? 141.25px : 162.5px;
            drop-shadow-offset-x: ta3.has-hover ? 7.75px : 5px;
            drop-shadow-offset-y: ta3.has-hover ? 21.25px : 0px;
            Image {
                source: @image-url("./rock.png");
                width: 60px;
            }

            ta3 := TouchArea {
                clicked => {
                    value = timer.running ? 4 : 4;
                    counter.y = timer.running ? 100px : 100px;
                }
            }

            animate y, drop-shadow-color, height, width, x, drop-shadow-offset-x, drop-shadow-offset-y {
                duration: 750ms;
                easing: ease-out-elastic;
            }
        }

        btn := Rectangle {
            background: #d65d0e;
            width: ta.has-hover ? 137.5px : 125px;
            height: ta.has-hover ? 137.5px : 125px;
            border-radius: 25px;
            drop-shadow-blur: 50px;
            drop-shadow-color: ta.has-hover ? #fe801910 : #1d2021;
            x: ta.has-hover ? 231.25px : 237.5px;
            y: ta.has-hover ? 141.25px : 162.5px;
            drop-shadow-offset-y: ta.has-hover ? 21.25px : 0px;
        // visible : false;
        
        Image {
                x: 3px + (parent.width - self.width) / 2;
                source: @image-url("./paper.png");
                width: 65px;
            }

            ta := TouchArea {
                clicked => {
                    value = timer.running ? 4 : 4;
                    counter.y = timer.running ? 100px : 100px;
                }
            }

            animate y, drop-shadow-color, height, width, x, drop-shadow-offset-x, drop-shadow-offset-y {
                duration: 750ms;
                easing: ease-out-elastic;
            }
        }

        Text {
            color: #ebdbb2;
            text: "You're Picking";
            opacity: 100%;
            x: (root.width - self.width) / 2;
            y: root.height * 3 / 4 - 10px;
            font-family: "JetBrains Mono";
            font-size: 15px;
        }

        Text {
            text: value;
            color : white;
            x : 0; y : 0;
        }
    }
}
